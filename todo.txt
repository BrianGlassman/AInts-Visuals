the axes and light cross aren't drawing right. Either leftover texture or not back to fixed pipeline





movement in interior view should follow centerlines
	works for tunnels, still need to check and/or implement for chamber
	BIG THING currently no way to move from one Structure to another




add something to exterior view that shows where the interior view is located

[thanksgiving] random noise perturbations

[thanksgiving] buildings and other ants

[thanksgiving] exterior and interior views, with movement controls

chamber uses a different noiseScale than tunnel, so there's a chance for cross-over

probably going to have to do perturbations at the same time as vertex-generation to get the normals right
	using Bezier patches might help, since OpenGL can do auto-normals there?

would like to have better 3D navigation for interior view, but the vector math gets nasty
	current version has "up" locked to Y axis, so turning is always around that axis instead of relative to view

look into using LINE_LOOP to make a wireframe? The LEGO example used a wireframe, too, but I think a different methodology

add "return to default" functions for lighting, materials, textures, colors, etc.
	or use push/pop attrib

prevent neighboring vertices from overlapping
	change how much the perturbation applies based on the line length? Probably not. That limits the max displacement
	somehow ensure that all lines are the same length? That way a fixed perturbation value (lineLength * 0.49) will always be ok
		also need to ensure open spaces (ex. between opposite walls) are larger than this value, but that should be fine
	do multiple perturbation passes? Large displacement for broad strokes applies to long edges, then smaller displacements use smaller edges
	bias or constrain the perturbations? ex. each vertical slice of a tunnel can only perturb up or down
	
[initial] meshes for tunnels and empty chambers, with adjacent structures connecting to each other

use VBOs (ref Ex. 8) for performance improvement

make orbiting lights based on fixed speed, not display speed
	the Thunderbirds example probably has this capability

May be better to use a pixel shader?
Marching cubes? Some other isosurface algorithm?
	https://www3.cs.stonybrook.edu/~qin/courses/visualization/visualization-surface-rendering-with-polygons.pdf
	https://people.eecs.berkeley.edu/~jrs/meshpapers/Bloomenthal.pdf

May want to use a DisplayList instead of VBO (so that I can store transformations, not just vertices)
	note: deprecated in OpenGL 3, although it's still available through compatibility

have a player option in exterior view for switching between back-cull (exterior) and front-cull (interior) for tunnel/chamber walls

[final] place new structures and delete existing ones
[final] UI menu to select which structure to place
[final] 3D grid visualization and ghost of to-be-placed

[stretch0] texture variations
[stretch1] merge adjacent chambers
[stretch2] shadowing
[stretch3] custom shader for cutatways to create a smooth cut
[stretch4] animations to ants/buildings
[stretch5] collision detection for interior view movement


HOPEFULLY DONE
---------------
Hopefully this has been fixed by using "float azimuth = 0, elevation = 0" instead of "float azimuth, elevation" but need to keep an eye on it
					about 1/3 of the time the light doesn't show up at all. WTF????
						in some scenes it's at the wrong Y value, may or may not be related
						
seed = 1669398889 the side-tunnel just below the Hill gets smushed
					fixed by implementing a Bezier curve fade, although this is still a good condition to test with

DONE
----------------
[initial] predefined layout
[initial] placeholder textures and lighting
