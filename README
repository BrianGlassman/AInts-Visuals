Brian Glassman
CSCI 5229 (graduate)

1. To build and run
	"make" will build
	"./final" will execute

2. Interface
	A. Both views
		  i. Pressing Escape will exit the program
		 ii. Right clicking opens a menu to change the view and or access various debug options (detailed below)
		iii. "[" and "]" will cycle through the available scenes: A full colony (the main, default scene), a pair of chambers, and a pair of tunnels
		 iv. "\" will go back to the full colony scene
	B. Exterior view
		  i. Moving the mouse towards the edges of the window will rotate the camera around the origin
		 ii. The red square shows where the eye position for the interior view is located
	C. Interior (first person) view
		  i. Moving the mouse towards the edges of the window will rotate the view around the current eye position
		 ii. WASD or the arrow keys will move the viewpoint, node by node. Movement is locked to the centerline nodes shown in cyan

3. Right-click menu
	A. View - change between interior and exterior views
	B. Lighting - toggle the orbit of the directed light
	C. Noise
		  i. Toggle perturbed geometry - show/hide the geometry that has been randomly perturbed
		 ii. Toggle P vectors - show/hide the random vectors that are used to create the perturbations
		iii. Toggle base geometry - show/hide the base, unperturbed geometry
		note: if both geometries are shown, base will be in wireframe mode
	D. Gizmos - toggle various settings
		  i. Wireframe / Filled
		 ii. Show/hide axes
		iii. Show/hide normal vectors
		 iv. Show/hide centerline nodes
		iiv. Console printout to debug movement from interior view

TODO:
	shader menu
	
	
DISABLE FOR RELEASE
	the lighting stuff that's not implemented right now
	gizmos > debug



Texture sources:
dirtGroundTileable - https://www.deviantart.com/fabooguy/art/Dirt-Ground-Texture-Tileable-2048x2048-441212191
	Flipped vertically and horizontally to create dirtGroundTileableFlipped

Code references:
Class slides, examples, and library
Shaders adapted from Ex. 25, with modification to apply texture based on vertex position
Polymorphic list - https://stackoverflow.com/questions/17532076/whats-the-preferred-c-idiom-to-own-a-collection-of-polymorphic-objects
GLUT menus
	http://www.cs.sjsu.edu/~bruce/fall_2016_cs_116a_lecture_creating_mouse_driven_menus.html
	http://www.cs.sjsu.edu/~bruce/programs/fall_2016_cs_116a/example_glut_menu/example_glut_menu.c
	https://www.opengl.org/resources/libraries/glut/spec3/node35.html
